<script src="https://underdogsitalia.com/wp-content/themes/underdogs/js/libraries.js?ver=20151215"></script>
<script src="https://unpkg.co/gsap@3/dist/gsap.min.js"></script>
<script src="https://unpkg.com/gsap@3/dist/ScrollTrigger.min.js"></script>
<script src="https://codepen.io/GreenSock/pen/vYbbEMa.js"></script>

<div class="canvas-container" id="canvas-wrapper">
  <!-- <canvas id="hero-lightpass"></canvas> -->
  <canvas id="image-sequence" width="1778" height="1080"></canvas>
  <canvas id="image-sequence-2" width="1778" height="1080"></canvas>
</div>
<div class="mobile-tablet">
  <div class="section-m-1">
    <div class="title">
    <h2>{{ section.settings.heading }}</h2>
    <div class="product-option">
      <a href="#canvas-wrapper"><img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/nav-product_1.png" width="auto" height="auto" class="img-pd1 product-active" onclick="showFirstCanvas()"></a>
      <a href="#canvas-wrapper"><img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/nav-product_2.png" width="auto" height="auto" class="img-pd2" onclick="showSecondCanvas()"></a>
    </div>
    <a href="{{ section.settings.product_link_1 }}" id="link-product"><button class="btn-mulled">Shop</button></a>
    </div>
    <div class="title step1">
      <h2>{{ section.settings.step_title_1 }}</h2>
      <h3>{{ section.settings.step_description_1 }}</h3>
    </div>
    <div class="title step2">
      <h2>{{ section.settings.step_title_2 }}</h2>
      <h3>{{ section.settings.step_description_2 }}</h3>
    </div>
    <div class="title step3">
      <h2>{{ section.settings.step_title_3 }}</h2>
      <h3>{{ section.settings.step_description_3 }}</h3>
    </div>
  </div>
  <div class="section-m-2">
    <div class="red-wine mobile-active">
      <img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/0027.png?v=1714470397" width="auto" height="auto">
      <img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/step1.png" width="auto" height="auto"> 
      <img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/step2.png" width="auto" height="auto"> 
      <img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/step3.png" width="auto" height="auto"> 
    </div>
    <div class="green-wine">
      <img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/0026-gr.png?v=1714629616" width="auto" height="auto">
      <img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/step1gr.png" width="auto" height="auto"> 
      <img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/step2gr.png" width="auto" height="auto"> 
      <img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/step3gr.png" width="auto" height="auto"> 
    </div>
  </div>
  <div class="section-m-3">
    <div class="title product-nav">
    <div class="product-option">
      <a href="#canvas-wrapper"><img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/nav-product_1.png" width="auto" height="auto" onclick="showFirstCanvas()"></a>
      <a href="#canvas-wrapper"><img src="https://cdn.shopify.com/s/files/1/0659/6080/4509/files/nav-product_2.png" width="auto" height="auto" onclick="showSecondCanvas()"></a>
    </div>
  </div>
  </div>
</div>


    
<style>
  .title {
    position: absolute;
    top: 45vh;
    left: 0;
    transform: translate(0, -50%);
    transition: .5s;
    margin: auto 5em;
    z-index: 99;
  }

  .title h2 {
    color: #fff;
    margin: 0;
    font-family: Lancelot,sans-serif;
    font-size: 2.5vw;
    max-width: 45%;
  }

  .canvas-container {
      height: 300vh;
      background: #000;
      margin: 0;
  }

  canvas {
    position: fixed;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  canvas#image-sequence,canvas#image-sequence-2 {
    transition: 1s;
  }

  canvas#image-sequence-2 {
    opacity: 0;
  }
  
  
</style>

<script>

let frameCount = 120,
urls = new Array(frameCount).fill().map((o, i) => `https://cdn.shopify.com/s/files/1/0659/6080/4509/files/${(i+1).toString().padStart(4, '0')}.png?v=17147921`);
  
imageSequence({
  urls, // Array of image URLs
  canvas: "#image-sequence", // <canvas> object to draw images to
  //clear: true, // only necessary if your images contain transparency
  //onUpdate: (index, image) => console.log("drew image index", index, ", image:", image),
  scrollTrigger: {
    start: 0,   // start at the very top
    end: "max", // entire page
    scrub: true, // important!
  }
});


/*
Helper function that handles scrubbing through a sequence of images, drawing the appropriate one to the provided canvas. 
Config object properties: 
- urls [Array]: an Array of image URLs
- canvas [Canvas]: the <canvas> object to draw to
- scrollTrigger [Object]: an optional ScrollTrigger configuration object like {trigger: "#trigger", start: "top top", end: "+=1000", scrub: true, pin: true}
- clear [Boolean]: if true, it'll clear out the canvas before drawing each frame (useful if your images contain transparency)
- paused [Boolean]: true if you'd like the returned animation to be paused initially (this isn't necessary if you're passing in a ScrollTrigger that's scrubbed, but it is helpful if you just want a normal playback animation)
- fps [Number]: optional frames per second - this determines the duration of the returned animation. This doesn't matter if you're using a scrubbed ScrollTrigger. Defaults to 30fps.
- onUpdate [Function]: optional callback for when the Tween updates (probably not used very often). It'll pass two parameters: 1) the index of the image (zero-based), and 2) the Image that was drawn to the canvas

Returns a Tween instance
*/
function imageSequence(config) {
  let playhead = {frame: 0},
      canvas = gsap.utils.toArray(config.canvas)[0] || console.warn("canvas not defined"),
      ctx = canvas.getContext("2d"),
      curFrame = -1,
      onUpdate = config.onUpdate,
      images,
      updateImage = function() {
        let frame = Math.round(playhead.frame);
        if (frame !== curFrame) { // only draw if necessary
          config.clear && ctx.clearRect(0, 0, canvas.width, canvas.height);
          ctx.drawImage(images[Math.round(playhead.frame)], 0, 0);
          curFrame = frame;
          onUpdate && onUpdate.call(this, frame, images[frame]);
        }
      };
  images = config.urls.map((url, i) => {
    let img = new Image();
    img.src = url;
    i || (img.onload = updateImage);
    return img;
  });
  return gsap.to(playhead, {
    frame: images.length - 1,
    ease: "none",
    onUpdate: updateImage,
    duration: images.length / (config.fps || 30),
    paused: !!config.paused,
    scrollTrigger: config.scrollTrigger
  });
}

function scrollFunction(title,px) {
  let titleElement = document.querySelector(title);
  if (document.body.scrollTop > px || document.documentElement.scrollTop > px) {
    titleElement.style.opacity = "0";
  } else {
    titleElement.style.opacity = "1";
  }
}

function stepFunction(title, pxin, pxout) {
  let titleElement = document.querySelector(title);
  const scrollY = window.scrollY;

  if (scrollY >= pxin && scrollY <= pxout) {
    titleElement.style.opacity = "1";
    titleElement.style.transform = "scale(1)"
  } else {
    titleElement.style.opacity = "0";
    titleElement.style.transform = "scale(0.5)"
  }
}

// Check if the screen width is at least 1024px before executing the scroll function
window.onscroll = function() {
  if (window.matchMedia("(min-width: 1024px)").matches) {
    scrollFunction(".title",50);
    stepFunction(".step1",700,980);
    stepFunction(".step2",1000,1500);
    stepFunction(".step3",1520,4000);
  }
};  


// Squence 2

let frameCount2 = 120,
urls2 = new Array(frameCount2).fill().map((o, i) => `https://cdn.shopify.com/s/files/1/0659/6080/4509/files/${(i+1).toString().padStart(4, '0')}-gr.png?v=17147924`);
  
imageSequence2({
  urls2, // Array of image URLs
  canvas: "#image-sequence-2", // <canvas> object to draw images to
  //clear: true, // only necessary if your images contain transparency
  //onUpdate: (index, image) => console.log("drew image index", index, ", image:", image),
  scrollTrigger: {
    start: 0,   // start at the very top
    end: "max", // entire page
    scrub: true, // important!
  }
});

function imageSequence2(config) {
  let playhead = {frame: 0},
      canvas = gsap.utils.toArray(config.canvas)[0] || console.warn("canvas not defined"),
      ctx = canvas.getContext("2d"),
      curFrame = -1,
      onUpdate = config.onUpdate,
      images,
      updateImage = function() {
        let frame = Math.round(playhead.frame);
        if (frame !== curFrame) { // only draw if necessary
          config.clear && ctx.clearRect(0, 0, canvas.width, canvas.height);
          ctx.drawImage(images[Math.round(playhead.frame)], 0, 0);
          curFrame = frame;
          onUpdate && onUpdate.call(this, frame, images[frame]);
        }
      };
  images = config.urls2.map((url, i) => {
    let img = new Image();
    img.src = url;
    i || (img.onload = updateImage);
    return img;
  });
  return gsap.to(playhead, {
    frame: images.length - 1,
    ease: "none",
    onUpdate: updateImage,
    duration: images.length / (config.fps || 30),
    paused: !!config.paused,
    scrollTrigger: config.scrollTrigger
  });
}

// Get the canvases
let canvas1 = document.getElementById('image-sequence');
let canvas2 = document.getElementById('image-sequence-2');
let redwine = document.querySelector('.red-wine');
let greenwine = document.querySelector('.green-wine');

// Get product image 
const imgPd1Elements = document.querySelector('.img-pd1');
const imgPd2Elements = document.querySelector('.img-pd2');

// Get BG Mobile & Link
const bgMobile = document.querySelector('.section-m-1');
const linkProduct = document.querySelector('#link-product');

function showFirstCanvas() {
  imgPd1Elements.classList.add('product-active');
  imgPd2Elements.classList.remove('product-active');
  canvas1.style.opacity = '1';
  canvas2.style.opacity = '0';
  canvas1.classList.add('canvas-fade-in');
  canvas2.classList.remove('canvas-fade-in');
  redwine.classList.add('mobile-active');
  greenwine.classList.remove('mobile-active');
  bgMobile.classList.remove('s-gr');
  linkProduct.href = '{{ section.settings.product_link_1 }}';
}

// Function to show the second canvas and hide the first with animation
function showSecondCanvas() {
  imgPd1Elements.classList.remove('product-active');
  imgPd2Elements.classList.add('product-active');
  canvas1.style.opacity = '0';
  canvas2.style.opacity = '1';
  canvas2.classList.add('canvas-fade-in');
  canvas1.classList.remove('canvas-fade-in');  
  redwine.classList.remove('mobile-active');
  greenwine.classList.add('mobile-active');
  bgMobile.classList.add('s-gr');
  linkProduct.href = '{{ section.settings.product_link_2 }}';
}  
</script>

{% schema %}
  {
    "name": "Mulled Canvas",
    "settings": [
      {
        "type": "text",
        "id": "heading",
        "label" : "Hero title",
        "default": "Treat your senses to the sweet aroma, the spiced flavour and the warm textures of a Mulled Beverage. Experience this delicious drink with friends or family today."
      },
      {
        "type": "text",
        "id": "step_title_1",
        "label" : "Step 1",
        "default": "STEP 1"
      },
      {
        "type": "text",
        "id": "step_description_1",
        "label" : "Step description 1",
        "default": "ADD the spiced bag into a mug"
      },
      {
        "type": "text",
        "id": "step_title_2",
        "label" : "Step 2",
        "default": "STEP 2"
      },
      {
        "type": "text",
        "id": "step_description_2",
        "label" : "Step description 2",
        "default": "POUR in your choice of beverage"
      },
      {
        "type": "text",
        "id": "step_title_3",
        "label" : "Step 3",
        "default": "STEP 3"
      },
      {
        "type": "text",
        "id": "step_description_3",
        "label" : "Step description 3",
        "default": "HEAT in the microwave for 60 seconds, or heat on the stove for 4-5 m"
      },
      {
        "type": "url",
        "id": "product_link_1",
        "label": "Product Link 1"
      },
      {
        "type": "url",
        "id": "product_link_2",
        "label": "Product Link 2"
      }
    ],
    "presets": [
    {
      "name": "Mulled Canvas"
    }
  ]
  }
{% endschema %}